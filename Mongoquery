using MongoDB.Driver;
using MongoDB.Bson;
// ...

var client = new MongoClient("your_connection_string");
var database = client.GetDatabase("your_database");
var collection = database.GetCollection<BsonDocument>("billing_cvrrecord");

int yearCondition = 2023; // replace with your year
int monthCondition = 6; // replace with your month

var match = new BsonDocument
{
    {
        "$match",
        new BsonDocument
        {
            { "CreatedOn", new BsonDocument { { "$gte", new DateTime(yearCondition, monthCondition, 1) }, { "$lt", new DateTime(yearCondition, monthCondition + 1, 1) } } }
        }
    }
};

var groupByDay = new BsonDocument
{
    {
        "$group",
        new BsonDocument
        {
            { 
                "_id", new BsonDocument 
                { 
                    { "appidentifier", new BsonDocument("$arrayElemAt", new BsonArray { new BsonDocument("$split", new BsonArray { "$appidentifier", "-" } ), 0 }) }, 
                    { "day", new BsonDocument("$dayOfMonth", "$CreatedOn") }, 
                    { "month", new BsonDocument("$month", "$CreatedOn") }, 
                    { "year", new BsonDocument("$year", "$CreatedOn") } 
                } 
            },
            { "dailyTotal", new BsonDocument("$sum", "$quantity") }
        }
    }
};

var groupByAppIdentifier = new BsonDocument
{
    {
        "$group",
        new BsonDocument
        {
            { "_id", "$_id.appidentifier" },
            { "maxDailyTotal", new BsonDocument("$max", "$dailyTotal") }
        }
    }
};

var sort = new BsonDocument { { "$sort", new BsonDocument { { "maxDailyTotal", -1 } } } };

var pipeline = new[] { match, groupByDay, groupByAppIdentifier, sort };
var result = collection.Aggregate<BsonDocument>(pipeline).ToList();

foreach (var doc in result)
{
    Console.WriteLine(doc.ToString());
}


public class AppQuantityResult
{
    [BsonElement("_id")]
    public IdField Id { get; set; }

    [BsonElement("maxDailyTotal")]
    public double MaxDailyTotal { get; set; }

    public class IdField
    {
        [BsonElement("appidentifier")]
        public string AppIdentifier { get; set; }

        [BsonElement("CostDriverName")]
        public string CostDriverName { get; set; }
    }
}
